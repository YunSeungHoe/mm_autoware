<?xml version="1.0"?>
<launch>
  <arg name="vehicle_model"/>
  <arg name="use_pointcloud_container"/>
  <arg name="pointcloud_container_name"/>

  <arg name="perception_mode"                     default="lidar"                     description="1. camera_lidar_fusion 2. lidar"/>
  <arg name="data_path"                           default="$(env HOME)/autoware/autoware_data" description="perception model 디렉토리 경로"/>
  <arg name="detected_objects_filter_method"      default="lanelet_filter"            description="options: lanelet_filter, position_filter"/>
  <arg name="occupancy_grid_map_method"           default="pointcloud_based_occupancy_grid_map"/>
  <arg name="occupancy_grid_map_updater"          default="binary_bayes_filter"/>
  <arg name="detected_objects_validation_method"  default="obstacle_pointcloud"/>

  <include file="$(find-pkg-share tier4_perception_launch)/launch/perception.launch.xml">
    <arg name="mode"                        value="$(var perception_mode)"/>
    <arg name="data_path"                   value="$(var data_path)"/>
    <arg name="vehicle_param_file"          value="$(find-pkg-share $(var vehicle_model)_description)/config/vehicle_info.param.yaml"/>
    <arg name="use_pointcloud_container"    value="$(var use_pointcloud_container)"/>
    <arg name="pointcloud_container_name"   value="$(var pointcloud_container_name)"/>
    <arg name="occupancy_grid_map_method"   value="$(var occupancy_grid_map_method)"/>
    <arg name="occupancy_grid_map_updater"  value="$(var occupancy_grid_map_updater)"/>
    <arg name="objects_filter_method"       value="$(var detected_objects_filter_method)"/>
    <arg name="objects_validation_method"   value="$(var detected_objects_validation_method)"/>

    <!-- object recognition -->
    <arg
      name="object_recognition_detection_euclidean_cluster_param_path"
      value="$(find-pkg-share mm_launch)/config/perception/object_recognition/detection/clustering/euclidean_cluster.param.yaml"/>
    <arg 
      name="object_recognition_detection_outlier_param_path" 
      value="$(find-pkg-share mm_launch)/config/perception/object_recognition/detection/clustering/outlier.param.yaml"/>
    <arg
      name="object_recognition_detection_voxel_grid_based_euclidean_cluster_param_path"
      value="$(find-pkg-share mm_launch)/config/perception/object_recognition/detection/clustering/voxel_grid_based_euclidean_cluster.param.yaml"/>
    <arg
      name="object_recognition_detection_object_lanelet_filter_param_path"
      value="$(find-pkg-share mm_launch)/config/perception/object_recognition/detection/object_filter/object_lanelet_filter.param.yaml"/>
    <arg
      name="object_recognition_detection_object_position_filter_param_path"
      value="$(find-pkg-share mm_launch)/config/perception/object_recognition/detection/object_filter/object_position_filter.param.yaml"/>
    <arg
      name="object_recognition_detection_pointcloud_map_filter_param_path"
      value="$(find-pkg-share mm_launch)/config/perception/object_recognition/detection/pointcloud_filter/pointcloud_map_filter.param.yaml"/>
    <arg
      name="object_recognition_detection_fusion_sync_param_path"
      value="$(find-pkg-share mm_launch)/config/perception/object_recognition/detection/image_projection_based_fusion/roi_sync.param.yaml"/>
    <arg
      name="object_recognition_prediction_map_based_prediction_param_path"
      value="$(find-pkg-share mm_launch)/config/perception/object_recognition/prediction/map_based_prediction.param.yaml"/>
    <arg
      name="object_recognition_detection_object_merger_data_association_matrix_param_path"
      value="$(find-pkg-share mm_launch)/config/perception/object_recognition/detection/object_merger/data_association_matrix.param.yaml"/>
    <arg
      name="object_recognition_detection_object_merger_distance_threshold_list_path"
      value="$(find-pkg-share mm_launch)/config/perception/object_recognition/detection/object_merger/overlapped_judge.param.yaml"/>
    <arg
      name="object_recognition_detection_radar_lanelet_filtering_range_param"
      value="$(find-pkg-share mm_launch)/config/perception/object_recognition/detection/object_filter/radar_lanelet_filter.param.yaml"/>
    <arg 
      name="object_recognition_detection_lidar_model_param_path" 
      value="$(find-pkg-share mm_launch)/config/perception/object_recognition/detection/lidar_model"/>
    <arg
      name="object_recognition_tracking_multi_object_tracker_data_association_matrix_param_path"
      value="$(find-pkg-share mm_launch)/config/perception/object_recognition/tracking/multi_object_tracker/data_association_matrix.param.yaml"/>
    <arg
      name="object_recognition_tracking_radar_object_tracker_data_association_matrix_param_path"
      value="$(find-pkg-share mm_launch)/config/perception/object_recognition/tracking/radar_object_tracker/data_association_matrix.param.yaml"/>
    <arg
      name="object_recognition_tracking_radar_object_tracker_tracking_setting_param_path"
      value="$(find-pkg-share mm_launch)/config/perception/object_recognition/tracking/radar_object_tracker/default_tracker.param.yaml"/>

    <!-- obstacle segmentation -->
    <arg
      name="obstacle_segmentation_ground_segmentation_param_path"
      value="$(find-pkg-share mm_launch)/config/perception/obstacle_segmentation/ground_segmentation/ground_segmentation.param.yaml"/>
    <arg
      name="obstacle_segmentation_ground_segmentation_elevation_map_param_path"
      value="$(find-pkg-share mm_launch)/config/perception/obstacle_segmentation/ground_segmentation/elevation_map_parameters.yaml"/>

    <!-- occupancy grid map -->
    <arg 
      name="occupancy_grid_map_param_path" 
      value="$(find-pkg-share mm_launch)/config/perception/occupancy_grid_map/$(var occupancy_grid_map_method).param.yaml"/>
    <arg 
      name="occupancy_grid_map_updater_param_path" 
      value="$(find-pkg-share mm_launch)/config/perception/occupancy_grid_map/$(var occupancy_grid_map_updater)_updater.param.yaml"/>

  </include>
</launch>
